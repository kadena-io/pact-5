{"module":{"hash":"UQLJbAuAQXFUDIKUdxfHSMKpxn7KgK2QqLKoUDcJ6qA","blessed":[],"interfaces":[{"namespace":"kip","name":"account-protocols-v1"}],"imports":[],"name":{"namespace":"util","name":"fungible-util"},"code":"(module fungible-util GOVERNANCE\n  (implements kip.account-protocols-v1)\n\n  (defcap GOVERNANCE ()\n    (enforce-guard (keyset-ref-guard 'util-ns-admin)))\n\n  (defun enforce-valid-amount\n    ( precision:integer\n      amount:decimal\n    )\n    (enforce (> amount 0.0) \"Positive non-zero amount\")\n    (enforce-precision precision amount)\n  )\n\n  (defun enforce-valid-account (account:string)\n    (enforce (> (length account) 2) \"minimum account length\")\n  )\n\n  (defun enforce-precision\n    ( precision:integer\n      amount:decimal\n    )\n    (enforce\n      (= (floor amount precision) amount)\n      \"precision violation\")\n  )\n\n  (defun enforce-valid-transfer\n    ( sender:string\n      receiver:string\n      precision:integer\n      amount:decimal)\n    (enforce (!= sender receiver)\n      \"sender cannot be the receiver of a transfer\")\n    (enforce-valid-amount precision amount)\n    (enforce-valid-account sender)\n    (enforce-valid-account receiver)\n  )\n\n\n  (defun check-reserved:string (account:string)\n    \" Checks ACCOUNT for reserved name and returns type if \\\n    \\ found or empty string. Reserved names start with a \\\n    \\ single char and colon, e.g. 'c:foo', which would return 'c' as type.\"\n    (let ((pfx (take 2 account)))\n      (if (= \":\" (take -1 pfx)) (take 1 pfx) \"\")))\n\n  (defun enforce-reserved:bool (account:string guard:guard)\n    @doc \"Enforce reserved account name protocols.\"\n    (if (validate-principal guard account)\n      true\n      (let ((r (check-reserved account)))\n        (if (= r \"\")\n          true\n          (if (= r \"k\")\n            (enforce false \"Single-key account protocol violation\")\n            (enforce false\n              (format \"Reserved protocol guard violation: {}\" [r]))\n            )))))\n\n)\n","meta":{"model":[],"docs":" Define a standard for support of Kadena Account Protocols,  which reserve account names starting with 'X:'' where X is a  single latin-1 character. It also indicates which protocols are  supported."},"governance":{"capability":{"defType":"Defcap","defMeta":null,"funType":{"args":[],"return":{"tag":"TypeVar","name":"a","constraint":[]}},"defName":"GOVERNANCE","defBody":{"scope":{"list":[{"args":[{"args":[{"i":null,"lit":"util-ns-admin"}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"keyset-ref-guard"}},"i":null}},"i":null},"info":null}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"enforce-guard"}},"i":null}},"i":null},"info":null}],"type":"*","i":null}},"module":{"namespace":"util","name":"fungible-util"},"meta":{"model":[],"docs":null},"info":null}}},"refMap":{"enforce-valid-amount":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"precision","type":"integer","info":null},{"name":"amount","type":"decimal","info":null}],"return":{"tag":"TypeVar","name":"b","constraint":[]}},"defName":"enforce-valid-amount","defBody":{"scope":{"list":[{"args":[{"args":[{"var":{"b":1},"i":null},{"i":null,"lit":0}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":">"}},"i":null}},"i":null},"info":null},{"i":null,"lit":"Positive non-zero amount"}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"enforce"}},"i":null}},"i":null},"info":null},{"args":[{"var":{"b":0},"i":null},{"var":{"b":1},"i":null}],"fun":{"var":{"f":{"var":{"direct":{"pdfv":"util.fungible-util.enforce-precision.{UQLJbAuAQXFUDIKUdxfHSMKpxn7KgK2QqLKoUDcJ6qA}"}},"i":null}},"i":null},"info":null}],"type":"*","i":null}},"module":{"namespace":"util","name":"fungible-util"},"meta":{"model":[],"docs":null},"info":null}},"check-reserved":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"account","type":"string","info":null}],"return":"string"},"defName":"check-reserved","defBody":{"scope":{"list":[{"body":{"scope":{"list":[{"args":[{"args":[{"i":null,"lit":":"},{"args":[{"i":null,"lit":{"int":-1}},{"var":{"b":0},"i":null}],"fun":{"var":{"f":{"var":{"f":{"var":{"direct":{"pdnat":"take"}},"i":null}},"i":null}},"i":null},"info":null}],"fun":{"var":{"f":{"var":{"f":{"var":{"direct":{"pdnat":"="}},"i":null}},"i":null}},"i":null},"info":null},{"args":[{"i":null,"lit":{"int":1}},{"var":{"b":0},"i":null}],"fun":{"var":{"f":{"var":{"f":{"var":{"direct":{"pdnat":"take"}},"i":null}},"i":null}},"i":null},"info":null},{"i":null,"lit":""}],"fun":{"var":{"f":{"var":{"f":{"var":{"direct":{"pdnat":"if"}},"i":null}},"i":null}},"i":null},"info":null}],"type":"*","i":null}},"pairs":[{"arg":{"name":"pfx","type":{"tag":"TypeVar","name":"f","constraint":[]},"info":null},"val":{"args":[{"i":null,"lit":{"int":2}},{"var":{"b":0},"i":null}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"take"}},"i":null}},"i":null},"info":null}}],"type":"let","i":null}],"type":"*","i":null}},"module":{"namespace":"util","name":"fungible-util"},"meta":{"model":[],"docs":" Checks ACCOUNT for reserved name and returns type if  found or empty string. Reserved names start with a  single char and colon, e.g. 'c:foo', which would return 'c' as type."},"info":null}},"enforce-precision":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"precision","type":"integer","info":null},{"name":"amount","type":"decimal","info":null}],"return":{"tag":"TypeVar","name":"d","constraint":[]}},"defName":"enforce-precision","defBody":{"scope":{"list":[{"args":[{"args":[{"args":[{"var":{"b":1},"i":null},{"var":{"b":0},"i":null}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"floor"}},"i":null}},"i":null},"info":null},{"var":{"b":1},"i":null}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"="}},"i":null}},"i":null},"info":null},{"i":null,"lit":"precision violation"}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"enforce"}},"i":null}},"i":null},"info":null}],"type":"*","i":null}},"module":{"namespace":"util","name":"fungible-util"},"meta":{"model":[],"docs":null},"info":null}},"enforce-valid-account":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"account","type":"string","info":null}],"return":{"tag":"TypeVar","name":"c","constraint":[]}},"defName":"enforce-valid-account","defBody":{"scope":{"list":[{"args":[{"args":[{"args":[{"var":{"b":0},"i":null}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"length"}},"i":null}},"i":null},"info":null},{"i":null,"lit":{"int":2}}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":">"}},"i":null}},"i":null},"info":null},{"i":null,"lit":"minimum account length"}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"enforce"}},"i":null}},"i":null},"info":null}],"type":"*","i":null}},"module":{"namespace":"util","name":"fungible-util"},"meta":{"model":[],"docs":null},"info":null}},"enforce-reserved":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"account","type":"string","info":null},{"name":"guard","type":{"guard":null},"info":null}],"return":"bool"},"defName":"enforce-reserved","defBody":{"scope":{"list":[{"args":[{"args":[{"var":{"b":1},"i":null},{"var":{"b":0},"i":null}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"validate-principal"}},"i":null}},"i":null},"info":null},{"i":null,"lit":true},{"body":{"scope":{"list":[{"args":[{"args":[{"var":{"b":0},"i":null},{"i":null,"lit":""}],"fun":{"var":{"f":{"var":{"f":{"var":{"direct":{"pdnat":"="}},"i":null}},"i":null}},"i":null},"info":null},{"i":null,"lit":true},{"args":[{"args":[{"var":{"b":0},"i":null},{"i":null,"lit":"k"}],"fun":{"var":{"f":{"var":{"f":{"var":{"direct":{"pdnat":"="}},"i":null}},"i":null}},"i":null},"info":null},{"args":[{"i":null,"lit":false},{"i":null,"lit":"Single-key account protocol violation"}],"fun":{"var":{"f":{"var":{"f":{"var":{"direct":{"pdnat":"enforce"}},"i":null}},"i":null}},"i":null},"info":null},{"args":[{"i":null,"lit":false},{"args":[{"i":null,"lit":"Reserved protocol guard violation: {}"},{"list":[{"var":{"b":0},"i":null}],"type":{"tag":"TypeVar","name":"h","constraint":[]},"i":null}],"fun":{"var":{"f":{"var":{"f":{"var":{"direct":{"pdnat":"format"}},"i":null}},"i":null}},"i":null},"info":null}],"fun":{"var":{"f":{"var":{"f":{"var":{"direct":{"pdnat":"enforce"}},"i":null}},"i":null}},"i":null},"info":null}],"fun":{"var":{"f":{"var":{"f":{"var":{"direct":{"pdnat":"if"}},"i":null}},"i":null}},"i":null},"info":null}],"fun":{"var":{"f":{"var":{"f":{"var":{"direct":{"pdnat":"if"}},"i":null}},"i":null}},"i":null},"info":null}],"type":"*","i":null}},"pairs":[{"arg":{"name":"r","type":{"tag":"TypeVar","name":"g","constraint":[]},"info":null},"val":{"args":[{"var":{"b":0},"i":null}],"fun":{"var":{"f":{"var":{"direct":{"pdfv":"util.fungible-util.check-reserved.{UQLJbAuAQXFUDIKUdxfHSMKpxn7KgK2QqLKoUDcJ6qA}"}},"i":null}},"i":null},"info":null}}],"type":"let","i":null}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"if"}},"i":null}},"i":null},"info":null}],"type":"*","i":null}},"module":{"namespace":"util","name":"fungible-util"},"meta":{"model":[],"docs":"Enforce reserved account name protocols. Enforce reserved account name protocols. Implementations  must call this function in all account creation modes  (transfer-create, create-account, etc)."},"info":null}},"enforce-valid-transfer":{"ref":{"defType":"Defun","defMeta":null,"funType":{"args":[{"name":"sender","type":"string","info":null},{"name":"receiver","type":"string","info":null},{"name":"precision","type":"integer","info":null},{"name":"amount","type":"decimal","info":null}],"return":{"tag":"TypeVar","name":"e","constraint":[]}},"defName":"enforce-valid-transfer","defBody":{"scope":{"list":[{"args":[{"args":[{"var":{"b":0},"i":null},{"var":{"b":1},"i":null}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"!="}},"i":null}},"i":null},"info":null},{"i":null,"lit":"sender cannot be the receiver of a transfer"}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"enforce"}},"i":null}},"i":null},"info":null},{"args":[{"var":{"b":2},"i":null},{"var":{"b":3},"i":null}],"fun":{"var":{"f":{"var":{"direct":{"pdfv":"util.fungible-util.enforce-valid-amount.{UQLJbAuAQXFUDIKUdxfHSMKpxn7KgK2QqLKoUDcJ6qA}"}},"i":null}},"i":null},"info":null},{"args":[{"var":{"b":0},"i":null}],"fun":{"var":{"f":{"var":{"direct":{"pdfv":"util.fungible-util.enforce-valid-account.{UQLJbAuAQXFUDIKUdxfHSMKpxn7KgK2QqLKoUDcJ6qA}"}},"i":null}},"i":null},"info":null},{"args":[{"var":{"b":1},"i":null}],"fun":{"var":{"f":{"var":{"direct":{"pdfv":"util.fungible-util.enforce-valid-account.{UQLJbAuAQXFUDIKUdxfHSMKpxn7KgK2QqLKoUDcJ6qA}"}},"i":null}},"i":null},"info":null}],"type":"*","i":null}},"module":{"namespace":"util","name":"fungible-util"},"meta":{"model":[],"docs":null},"info":null}},"GOVERNANCE":{"ref":{"defType":"Defcap","defMeta":null,"funType":{"args":[],"return":{"tag":"TypeVar","name":"a","constraint":[]}},"defName":"GOVERNANCE","defBody":{"scope":{"list":[{"args":[{"args":[{"i":null,"lit":"util-ns-admin"}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"keyset-ref-guard"}},"i":null}},"i":null},"info":null}],"fun":{"var":{"f":{"var":{"direct":{"pdnat":"enforce-guard"}},"i":null}},"i":null},"info":null}],"type":"*","i":null}},"module":{"namespace":"util","name":"fungible-util"},"meta":{"model":[],"docs":null},"info":null}}}}

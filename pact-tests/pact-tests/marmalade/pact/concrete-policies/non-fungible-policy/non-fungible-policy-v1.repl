;;load policy manager, ledger
(load "../../policy-manager/policy-manager.repl")
(typecheck "marmalade-v2.non-fungible-policy-v1")

(begin-tx)
  (use marmalade-v2.policy-manager [ NON_FUNGIBLE_POLICY ROYALTY_POLICY COLLECTION_POLICY])
  (use marmalade-v2.util-v1 [concrete-policy-bool])
  (use mini-guard-utils)

  (module util GOV
    (defcap GOV () true)

    (defconst DEFAULT_NON_FUNGIBLE_CONCRETE_POLICY:object{concrete-policy-bool}
      { 'non-fungible-policy: true
       ,'royalty-policy: false
       ,'collection-policy:false
       ,'guard-policy: true
      }
    )
  )
(commit-tx)

(begin-tx)
  (use marmalade-v2.ledger)
  (use marmalade-v2.util-v1)
  (use mini-guard-utils)
  (env-data {
    "creator-account": "k:6778a9153dbfcfb787c9eb1700455a59af62b15008b71f805398d857bddb48f3",
    "creator-guard": {"keys": ["6778a9153dbfcfb787c9eb1700455a59af62b15008b71f805398d857bddb48f3"], "pred": "keys-all"}
  })
  (marmalade-v2.abc.create-account (read-string "creator-account") (read-keyset 'creator-guard))
(commit-tx)

(begin-tx "Create a non-fungible token fails when precision is not 0")
  (use marmalade-v2.ledger)
  (use marmalade-v2.util-v1)
  (use mini-guard-utils)

  (env-data {
    "token-id": (create-token-id { 'uri: "test-non-fungible-uri", 'precision: 1, 'policies: (create-policies util.DEFAULT_NON_FUNGIBLE_CONCRETE_POLICY) } ALWAYS-TRUE)
    ,"account": "k:e4c6807d79d8bf4695e10e5678ebf72862f59b71f971d39dd3349f4beeacd6e3"
    ,"mint-guard": {"keys": ["e4c6807d79d8bf4695e10e5678ebf72862f59b71f971d39dd3349f4beeacd6e3"], "pred": "keys-all"}
  })

  (expect-failure  "Precision should be 0"
    (create-token (read-msg "token-id") 0 "test-non-fungible-uri" (create-policies util.DEFAULT_NON_FUNGIBLE_CONCRETE_POLICY) ALWAYS-TRUE))

(rollback-tx)


(begin-tx "Create a non-fungible token")
  (use marmalade-v2.ledger)
  (use marmalade-v2.guard-policy-v1)
  (use marmalade-v2.util-v1)
  (use mini-guard-utils)
  (env-data {
    "token-id": (create-token-id { 'uri: "test-non-fungible-uri", 'precision: 0, 'policies: (create-policies util.DEFAULT_NON_FUNGIBLE_CONCRETE_POLICY) } ALWAYS-TRUE)
    ,"account": "k:e4c6807d79d8bf4695e10e5678ebf72862f59b71f971d39dd3349f4beeacd6e3"
    ,"mint-guard": {"keys": ["e4c6807d79d8bf4695e10e5678ebf72862f59b71f971d39dd3349f4beeacd6e3"], "pred": "keys-all"}
  })

(expect  "create-token succeeds with non-fungible-policy"
   true
  (create-token (read-msg "token-id") 0 "test-non-fungible-uri" (create-policies util.DEFAULT_NON_FUNGIBLE_CONCRETE_POLICY) ALWAYS-TRUE))

(expect "create-token events"
   [ {"name": "marmalade-v2.guard-policy-v1.GUARDS","params": [(read-msg 'token-id) {"burn-guard": GUARD_SUCCESS,"mint-guard": GUARD_SUCCESS,"sale-guard": GUARD_SUCCESS,"transfer-guard": GUARD_SUCCESS, "uri-guard": GUARD_SUCCESS}]}
     {"name": "marmalade-v2.ledger.TOKEN","params": [(read-msg 'token-id) 0 [marmalade-v2.non-fungible-policy-v1 marmalade-v2.guard-policy-v1] "test-non-fungible-uri" ALWAYS-TRUE]}]
  (map (remove "module-hash")  (env-events true)))
(commit-tx)

(begin-tx "Mint with a supply other then 1 fails ")

  (use marmalade-v2.ledger)
  (env-sigs [
    { 'key: 'e4c6807d79d8bf4695e10e5678ebf72862f59b71f971d39dd3349f4beeacd6e3
     ,'caps: [(marmalade-v2.ledger.MINT (read-msg 'token-id) "k:e4c6807d79d8bf4695e10e5678ebf72862f59b71f971d39dd3349f4beeacd6e3" 5.0)
    ]
    }])

  (expect-failure "minting with amount of 5 fails"
    "Mint can only be 1"
    (mint (read-msg "token-id" )  (read-msg "account" ) (read-keyset "mint-guard" ) 5.0))

(commit-tx)

(begin-tx "Mint with a fractional amount fails ")
  (use marmalade-v2.ledger)
  (env-sigs [
    { 'key: 'e4c6807d79d8bf4695e10e5678ebf72862f59b71f971d39dd3349f4beeacd6e3
    ,'caps: [(marmalade-v2.ledger.MINT (read-msg 'token-id) "k:e4c6807d79d8bf4695e10e5678ebf72862f59b71f971d39dd3349f4beeacd6e3" 0.5)]
    }])

  (expect-failure "minting with amout of 0.5 fails"
    "Mint can only be 1"
    (mint (read-msg "token-id" )  (read-msg "account" ) (read-keyset "mint-guard" ) 0.5))
(commit-tx)

(begin-tx "Mint with amount of 1 succeeds")
  (use marmalade-v2.ledger)
  (env-sigs [
    { 'key: 'e4c6807d79d8bf4695e10e5678ebf72862f59b71f971d39dd3349f4beeacd6e3
    ,'caps: [(marmalade-v2.ledger.MINT (read-msg 'token-id) (read-string "account") 1.0)
             (marmalade-v2.guard-policy-v1.MINT (read-msg 'token-id) (read-string "account" ) 1.0)
            ]
    }])

  (expect "minting succeeds"
    true
    (mint (read-msg "token-id" )  (read-msg "account" ) (read-keyset "mint-guard" ) 1.0))

  (expect "mint events"
   [ {"name": "marmalade-v2.ledger.MINT","params": [(read-msg 'token-id) (read-string "account") 1.0]}
     {"name": "marmalade-v2.ledger.ACCOUNT_GUARD","params": [(read-msg 'token-id) (read-string "account") (read-keyset 'mint-guard)]}
     {"name": "marmalade-v2.ledger.RECONCILE","params": [(read-msg 'token-id) 1.0 {"account": "","current": 0.0,"previous": 0.0} {"account": (read-string "account" ),"current": 1.0,"previous": 0.0}]}
     {"name": "marmalade-v2.ledger.SUPPLY","params": [(read-msg 'token-id) 1.0]}]
    (map (remove "module-hash")  (env-events true)))
(commit-tx)

(begin-tx "Burn a non-fungible token")
  (use marmalade-v2.ledger)
  (env-sigs [
    { 'key: 'e4c6807d79d8bf4695e10e5678ebf72862f59b71f971d39dd3349f4beeacd6e3
    ,'caps: [(marmalade-v2.ledger.BURN (read-msg 'token-id) (read-string "account") 1.0)]
    }])

  (expect-failure "Burning is not allowed"
    "Burn prohibited"
    (burn (read-msg "token-id" )  (read-string "account") 1.0))
(commit-tx)
